name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHON_VERSION: 3.12
  DOCKER_COMPOSE_FILE: docker-compose.yml
  MAX_RETRIES: 10
  RETRY_INTERVAL: 5

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: modularmonolith
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d modularmonolith"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      kafka:
        image: bitnami/kafka:latest
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENERS: PLAINTEXT://:9092
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        options: >-
          --health-cmd "kafka-topics.sh --bootstrap-server localhost:9092 --list"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Scan for secrets
        uses: awslabs/github-secrets-detector-action@v1
        with:
          scan_paths: "."

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio flake8 mypy bandit safety coverage codecov

      - name: Lint with flake8
        run: flake8 app tests

      - name: Type check with mypy
        run: mypy app

      - name: Security check with bandit
        run: bandit -r app

      - name: Dependency safety scan
        run: safety check

      # Wait for services
      - name: Wait for Postgres
        run: |
          for i in $(seq 1 $MAX_RETRIES); do
            pg_isready -h localhost -p 5432 && break
            echo "Waiting for Postgres..."
            sleep $RETRY_INTERVAL
          done

      - name: Wait for Redis
        run: |
          for i in $(seq 1 $MAX_RETRIES); do
            redis-cli ping && break
            echo "Waiting for Redis..."
            sleep $RETRY_INTERVAL
          done

      - name: Wait for Kafka
        run: |
          for i in $(seq 1 $MAX_RETRIES); do
            kafka-topics.sh --bootstrap-server localhost:9092 --list && break
            echo "Waiting for Kafka..."
            sleep $RETRY_INTERVAL
          done

      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests --maxfail=1 --disable-warnings -q
          coverage xml
          coverage html

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: unittests
          name: codecov-coverage
          fail_ci_if_error: true

      - name: Tear down Docker services
        run: docker-compose -f $DOCKER_COMPOSE_FILE down -v

  deploy:
    runs-on: ubuntu-latest
    needs: setup-and-test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and start Docker stack
        run: |
          docker-compose -f docker-compose.yml up -d --build
          sleep 10

      - name: Smoke tests
        run: |
          pytest tests/smoke_tests --maxfail=1 --disable-warnings -q

      - name: Tear down Docker stack
        run: docker-compose -f docker-compose.yml down -v
